<?php
/**
 * ShipmentExtra
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shippo external API.
 *
 * Use this API to integrate with the Shippo service
 *
 * The version of the OpenAPI document: 2018-02-08
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ShipmentExtra Class Doc Comment
 *
 * @category Class
 * @description An object holding optional extra services to be requested.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ShipmentExtra implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ShipmentExtra';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'accounts_receivable_customer_account' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'alcohol' => '\OpenAPI\Client\Model\Alcohol',
        'ancillary_endorsement' => 'string',
        'appropriation_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'authority_to_leave' => 'bool',
        'bill_of_lading_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'billing' => '\OpenAPI\Client\Model\Billing',
        'bypass_address_validation' => 'bool',
        'carbon_neutral' => 'bool',
        'carrier_hub_id' => 'string',
        'carrier_hub_travel_time' => 'int',
        'cod' => '\OpenAPI\Client\Model\COD',
        'cod_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'container_type' => 'string',
        'critical_pull_time' => 'string',
        'customer_branch' => 'string',
        'customer_reference' => '\OpenAPI\Client\Model\CustomerReference',
        'dangerous_goods' => '\OpenAPI\Client\Model\DangerousGoodsObject',
        'dangerous_goods_code' => 'string',
        'dealer_order_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'delivery_instructions' => 'string',
        'dept_number' => '\OpenAPI\Client\Model\DepartmentNumber',
        'dry_ice' => '\OpenAPI\Client\Model\DryIce',
        'fda_product_code' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'fulfillment_center' => 'string',
        'insurance' => '\OpenAPI\Client\Model\Insurance',
        'invoice_number' => '\OpenAPI\Client\Model\InvoiceNumber',
        'is_return' => 'bool',
        'lasership_attrs' => '\OpenAPI\Client\Model\ShipmentExtraLasershipAttributesEnum[]',
        'lasership_declared_value' => 'string',
        'manifest_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'model_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'part_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'po_number' => '\OpenAPI\Client\Model\PoNumber',
        'preferred_delivery_timeframe' => 'string',
        'premium' => 'bool',
        'production_code' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'purchase_request_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'qr_code_requested' => 'bool',
        'reference_1' => 'string',
        'reference_2' => 'string',
        'request_retail_rates' => 'bool',
        'return_service_type' => 'string',
        'rma_number' => '\OpenAPI\Client\Model\RmaNumber',
        'saturday_delivery' => 'bool',
        'salesperson_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'serial_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'signature_confirmation' => 'string',
        'store_number' => '\OpenAPI\Client\Model\UPSReferenceFields',
        'transaction_reference_number' => '\OpenAPI\Client\Model\UPSReferenceFields'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'accounts_receivable_customer_account' => null,
        'alcohol' => null,
        'ancillary_endorsement' => null,
        'appropriation_number' => null,
        'authority_to_leave' => null,
        'bill_of_lading_number' => null,
        'billing' => null,
        'bypass_address_validation' => null,
        'carbon_neutral' => null,
        'carrier_hub_id' => null,
        'carrier_hub_travel_time' => null,
        'cod' => null,
        'cod_number' => null,
        'container_type' => null,
        'critical_pull_time' => null,
        'customer_branch' => null,
        'customer_reference' => null,
        'dangerous_goods' => null,
        'dangerous_goods_code' => null,
        'dealer_order_number' => null,
        'delivery_instructions' => null,
        'dept_number' => null,
        'dry_ice' => null,
        'fda_product_code' => null,
        'fulfillment_center' => null,
        'insurance' => null,
        'invoice_number' => null,
        'is_return' => null,
        'lasership_attrs' => null,
        'lasership_declared_value' => null,
        'manifest_number' => null,
        'model_number' => null,
        'part_number' => null,
        'po_number' => null,
        'preferred_delivery_timeframe' => null,
        'premium' => null,
        'production_code' => null,
        'purchase_request_number' => null,
        'qr_code_requested' => null,
        'reference_1' => null,
        'reference_2' => null,
        'request_retail_rates' => null,
        'return_service_type' => null,
        'rma_number' => null,
        'saturday_delivery' => null,
        'salesperson_number' => null,
        'serial_number' => null,
        'signature_confirmation' => null,
        'store_number' => null,
        'transaction_reference_number' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'accounts_receivable_customer_account' => false,
        'alcohol' => false,
        'ancillary_endorsement' => false,
        'appropriation_number' => false,
        'authority_to_leave' => false,
        'bill_of_lading_number' => false,
        'billing' => false,
        'bypass_address_validation' => false,
        'carbon_neutral' => false,
        'carrier_hub_id' => false,
        'carrier_hub_travel_time' => false,
        'cod' => false,
        'cod_number' => false,
        'container_type' => false,
        'critical_pull_time' => false,
        'customer_branch' => false,
        'customer_reference' => false,
        'dangerous_goods' => false,
        'dangerous_goods_code' => false,
        'dealer_order_number' => false,
        'delivery_instructions' => false,
        'dept_number' => false,
        'dry_ice' => false,
        'fda_product_code' => false,
        'fulfillment_center' => false,
        'insurance' => false,
        'invoice_number' => false,
        'is_return' => false,
        'lasership_attrs' => false,
        'lasership_declared_value' => false,
        'manifest_number' => false,
        'model_number' => false,
        'part_number' => false,
        'po_number' => false,
        'preferred_delivery_timeframe' => false,
        'premium' => false,
        'production_code' => false,
        'purchase_request_number' => false,
        'qr_code_requested' => false,
        'reference_1' => false,
        'reference_2' => false,
        'request_retail_rates' => false,
        'return_service_type' => false,
        'rma_number' => false,
        'saturday_delivery' => false,
        'salesperson_number' => false,
        'serial_number' => false,
        'signature_confirmation' => false,
        'store_number' => false,
        'transaction_reference_number' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accounts_receivable_customer_account' => 'accounts_receivable_customer_account',
        'alcohol' => 'alcohol',
        'ancillary_endorsement' => 'ancillary_endorsement',
        'appropriation_number' => 'appropriation_number',
        'authority_to_leave' => 'authority_to_leave',
        'bill_of_lading_number' => 'bill_of_lading_number',
        'billing' => 'billing',
        'bypass_address_validation' => 'bypass_address_validation',
        'carbon_neutral' => 'carbon_neutral',
        'carrier_hub_id' => 'carrier_hub_id',
        'carrier_hub_travel_time' => 'carrier_hub_travel_time',
        'cod' => 'COD',
        'cod_number' => 'cod_number',
        'container_type' => 'container_type',
        'critical_pull_time' => 'critical_pull_time',
        'customer_branch' => 'customer_branch',
        'customer_reference' => 'customer_reference',
        'dangerous_goods' => 'dangerous_goods',
        'dangerous_goods_code' => 'dangerous_goods_code',
        'dealer_order_number' => 'dealer_order_number',
        'delivery_instructions' => 'delivery_instructions',
        'dept_number' => 'dept_number',
        'dry_ice' => 'dry_ice',
        'fda_product_code' => 'fda_product_code',
        'fulfillment_center' => 'fulfillment_center',
        'insurance' => 'insurance',
        'invoice_number' => 'invoice_number',
        'is_return' => 'is_return',
        'lasership_attrs' => 'lasership_attrs',
        'lasership_declared_value' => 'lasership_declared_value',
        'manifest_number' => 'manifest_number',
        'model_number' => 'model_number',
        'part_number' => 'part_number',
        'po_number' => 'po_number',
        'preferred_delivery_timeframe' => 'preferred_delivery_timeframe',
        'premium' => 'premium',
        'production_code' => 'production_code',
        'purchase_request_number' => 'purchase_request_number',
        'qr_code_requested' => 'qr_code_requested',
        'reference_1' => 'reference_1',
        'reference_2' => 'reference_2',
        'request_retail_rates' => 'request_retail_rates',
        'return_service_type' => 'return_service_type',
        'rma_number' => 'rma_number',
        'saturday_delivery' => 'saturday_delivery',
        'salesperson_number' => 'salesperson_number',
        'serial_number' => 'serial_number',
        'signature_confirmation' => 'signature_confirmation',
        'store_number' => 'store_number',
        'transaction_reference_number' => 'transaction_reference_number'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accounts_receivable_customer_account' => 'setAccountsReceivableCustomerAccount',
        'alcohol' => 'setAlcohol',
        'ancillary_endorsement' => 'setAncillaryEndorsement',
        'appropriation_number' => 'setAppropriationNumber',
        'authority_to_leave' => 'setAuthorityToLeave',
        'bill_of_lading_number' => 'setBillOfLadingNumber',
        'billing' => 'setBilling',
        'bypass_address_validation' => 'setBypassAddressValidation',
        'carbon_neutral' => 'setCarbonNeutral',
        'carrier_hub_id' => 'setCarrierHubId',
        'carrier_hub_travel_time' => 'setCarrierHubTravelTime',
        'cod' => 'setCod',
        'cod_number' => 'setCodNumber',
        'container_type' => 'setContainerType',
        'critical_pull_time' => 'setCriticalPullTime',
        'customer_branch' => 'setCustomerBranch',
        'customer_reference' => 'setCustomerReference',
        'dangerous_goods' => 'setDangerousGoods',
        'dangerous_goods_code' => 'setDangerousGoodsCode',
        'dealer_order_number' => 'setDealerOrderNumber',
        'delivery_instructions' => 'setDeliveryInstructions',
        'dept_number' => 'setDeptNumber',
        'dry_ice' => 'setDryIce',
        'fda_product_code' => 'setFdaProductCode',
        'fulfillment_center' => 'setFulfillmentCenter',
        'insurance' => 'setInsurance',
        'invoice_number' => 'setInvoiceNumber',
        'is_return' => 'setIsReturn',
        'lasership_attrs' => 'setLasershipAttrs',
        'lasership_declared_value' => 'setLasershipDeclaredValue',
        'manifest_number' => 'setManifestNumber',
        'model_number' => 'setModelNumber',
        'part_number' => 'setPartNumber',
        'po_number' => 'setPoNumber',
        'preferred_delivery_timeframe' => 'setPreferredDeliveryTimeframe',
        'premium' => 'setPremium',
        'production_code' => 'setProductionCode',
        'purchase_request_number' => 'setPurchaseRequestNumber',
        'qr_code_requested' => 'setQrCodeRequested',
        'reference_1' => 'setReference1',
        'reference_2' => 'setReference2',
        'request_retail_rates' => 'setRequestRetailRates',
        'return_service_type' => 'setReturnServiceType',
        'rma_number' => 'setRmaNumber',
        'saturday_delivery' => 'setSaturdayDelivery',
        'salesperson_number' => 'setSalespersonNumber',
        'serial_number' => 'setSerialNumber',
        'signature_confirmation' => 'setSignatureConfirmation',
        'store_number' => 'setStoreNumber',
        'transaction_reference_number' => 'setTransactionReferenceNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accounts_receivable_customer_account' => 'getAccountsReceivableCustomerAccount',
        'alcohol' => 'getAlcohol',
        'ancillary_endorsement' => 'getAncillaryEndorsement',
        'appropriation_number' => 'getAppropriationNumber',
        'authority_to_leave' => 'getAuthorityToLeave',
        'bill_of_lading_number' => 'getBillOfLadingNumber',
        'billing' => 'getBilling',
        'bypass_address_validation' => 'getBypassAddressValidation',
        'carbon_neutral' => 'getCarbonNeutral',
        'carrier_hub_id' => 'getCarrierHubId',
        'carrier_hub_travel_time' => 'getCarrierHubTravelTime',
        'cod' => 'getCod',
        'cod_number' => 'getCodNumber',
        'container_type' => 'getContainerType',
        'critical_pull_time' => 'getCriticalPullTime',
        'customer_branch' => 'getCustomerBranch',
        'customer_reference' => 'getCustomerReference',
        'dangerous_goods' => 'getDangerousGoods',
        'dangerous_goods_code' => 'getDangerousGoodsCode',
        'dealer_order_number' => 'getDealerOrderNumber',
        'delivery_instructions' => 'getDeliveryInstructions',
        'dept_number' => 'getDeptNumber',
        'dry_ice' => 'getDryIce',
        'fda_product_code' => 'getFdaProductCode',
        'fulfillment_center' => 'getFulfillmentCenter',
        'insurance' => 'getInsurance',
        'invoice_number' => 'getInvoiceNumber',
        'is_return' => 'getIsReturn',
        'lasership_attrs' => 'getLasershipAttrs',
        'lasership_declared_value' => 'getLasershipDeclaredValue',
        'manifest_number' => 'getManifestNumber',
        'model_number' => 'getModelNumber',
        'part_number' => 'getPartNumber',
        'po_number' => 'getPoNumber',
        'preferred_delivery_timeframe' => 'getPreferredDeliveryTimeframe',
        'premium' => 'getPremium',
        'production_code' => 'getProductionCode',
        'purchase_request_number' => 'getPurchaseRequestNumber',
        'qr_code_requested' => 'getQrCodeRequested',
        'reference_1' => 'getReference1',
        'reference_2' => 'getReference2',
        'request_retail_rates' => 'getRequestRetailRates',
        'return_service_type' => 'getReturnServiceType',
        'rma_number' => 'getRmaNumber',
        'saturday_delivery' => 'getSaturdayDelivery',
        'salesperson_number' => 'getSalespersonNumber',
        'serial_number' => 'getSerialNumber',
        'signature_confirmation' => 'getSignatureConfirmation',
        'store_number' => 'getStoreNumber',
        'transaction_reference_number' => 'getTransactionReferenceNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    public const ANCILLARY_ENDORSEMENT_FORWARDING_SERVICE_REQUESTED = 'FORWARDING_SERVICE_REQUESTED';
    public const ANCILLARY_ENDORSEMENT_RETURN_SERVICE_REQUESTED = 'RETURN_SERVICE_REQUESTED';
    public const DANGEROUS_GOODS_CODE__01 = '01';
    public const DANGEROUS_GOODS_CODE__02 = '02';
    public const DANGEROUS_GOODS_CODE__03 = '03';
    public const DANGEROUS_GOODS_CODE__04 = '04';
    public const DANGEROUS_GOODS_CODE__05 = '05';
    public const DANGEROUS_GOODS_CODE__06 = '06';
    public const DANGEROUS_GOODS_CODE__07 = '07';
    public const DANGEROUS_GOODS_CODE__08 = '08';
    public const DANGEROUS_GOODS_CODE__09 = '09';
    public const PREFERRED_DELIVERY_TIMEFRAME__10001200 = '10001200';
    public const PREFERRED_DELIVERY_TIMEFRAME__12001400 = '12001400';
    public const PREFERRED_DELIVERY_TIMEFRAME__14001600 = '14001600';
    public const PREFERRED_DELIVERY_TIMEFRAME__16001800 = '16001800';
    public const PREFERRED_DELIVERY_TIMEFRAME__18002000 = '18002000';
    public const PREFERRED_DELIVERY_TIMEFRAME__19002100 = '19002100';
    public const SIGNATURE_CONFIRMATION_STANDARD = 'STANDARD';
    public const SIGNATURE_CONFIRMATION_ADULT = 'ADULT';
    public const SIGNATURE_CONFIRMATION_CERTIFIED = 'CERTIFIED';
    public const SIGNATURE_CONFIRMATION_INDIRECT = 'INDIRECT';
    public const SIGNATURE_CONFIRMATION_CARRIER_CONFIRMATION = 'CARRIER_CONFIRMATION';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getAncillaryEndorsementAllowableValues()
    {
        return [
            self::ANCILLARY_ENDORSEMENT_FORWARDING_SERVICE_REQUESTED,
            self::ANCILLARY_ENDORSEMENT_RETURN_SERVICE_REQUESTED,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getDangerousGoodsCodeAllowableValues()
    {
        return [
            self::DANGEROUS_GOODS_CODE__01,
            self::DANGEROUS_GOODS_CODE__02,
            self::DANGEROUS_GOODS_CODE__03,
            self::DANGEROUS_GOODS_CODE__04,
            self::DANGEROUS_GOODS_CODE__05,
            self::DANGEROUS_GOODS_CODE__06,
            self::DANGEROUS_GOODS_CODE__07,
            self::DANGEROUS_GOODS_CODE__08,
            self::DANGEROUS_GOODS_CODE__09,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getPreferredDeliveryTimeframeAllowableValues()
    {
        return [
            self::PREFERRED_DELIVERY_TIMEFRAME__10001200,
            self::PREFERRED_DELIVERY_TIMEFRAME__12001400,
            self::PREFERRED_DELIVERY_TIMEFRAME__14001600,
            self::PREFERRED_DELIVERY_TIMEFRAME__16001800,
            self::PREFERRED_DELIVERY_TIMEFRAME__18002000,
            self::PREFERRED_DELIVERY_TIMEFRAME__19002100,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getSignatureConfirmationAllowableValues()
    {
        return [
            self::SIGNATURE_CONFIRMATION_STANDARD,
            self::SIGNATURE_CONFIRMATION_ADULT,
            self::SIGNATURE_CONFIRMATION_CERTIFIED,
            self::SIGNATURE_CONFIRMATION_INDIRECT,
            self::SIGNATURE_CONFIRMATION_CARRIER_CONFIRMATION,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('accounts_receivable_customer_account', $data ?? [], null);
        $this->setIfExists('alcohol', $data ?? [], null);
        $this->setIfExists('ancillary_endorsement', $data ?? [], null);
        $this->setIfExists('appropriation_number', $data ?? [], null);
        $this->setIfExists('authority_to_leave', $data ?? [], null);
        $this->setIfExists('bill_of_lading_number', $data ?? [], null);
        $this->setIfExists('billing', $data ?? [], null);
        $this->setIfExists('bypass_address_validation', $data ?? [], null);
        $this->setIfExists('carbon_neutral', $data ?? [], null);
        $this->setIfExists('carrier_hub_id', $data ?? [], null);
        $this->setIfExists('carrier_hub_travel_time', $data ?? [], null);
        $this->setIfExists('cod', $data ?? [], null);
        $this->setIfExists('cod_number', $data ?? [], null);
        $this->setIfExists('container_type', $data ?? [], null);
        $this->setIfExists('critical_pull_time', $data ?? [], null);
        $this->setIfExists('customer_branch', $data ?? [], null);
        $this->setIfExists('customer_reference', $data ?? [], null);
        $this->setIfExists('dangerous_goods', $data ?? [], null);
        $this->setIfExists('dangerous_goods_code', $data ?? [], null);
        $this->setIfExists('dealer_order_number', $data ?? [], null);
        $this->setIfExists('delivery_instructions', $data ?? [], null);
        $this->setIfExists('dept_number', $data ?? [], null);
        $this->setIfExists('dry_ice', $data ?? [], null);
        $this->setIfExists('fda_product_code', $data ?? [], null);
        $this->setIfExists('fulfillment_center', $data ?? [], null);
        $this->setIfExists('insurance', $data ?? [], null);
        $this->setIfExists('invoice_number', $data ?? [], null);
        $this->setIfExists('is_return', $data ?? [], null);
        $this->setIfExists('lasership_attrs', $data ?? [], null);
        $this->setIfExists('lasership_declared_value', $data ?? [], null);
        $this->setIfExists('manifest_number', $data ?? [], null);
        $this->setIfExists('model_number', $data ?? [], null);
        $this->setIfExists('part_number', $data ?? [], null);
        $this->setIfExists('po_number', $data ?? [], null);
        $this->setIfExists('preferred_delivery_timeframe', $data ?? [], null);
        $this->setIfExists('premium', $data ?? [], null);
        $this->setIfExists('production_code', $data ?? [], null);
        $this->setIfExists('purchase_request_number', $data ?? [], null);
        $this->setIfExists('qr_code_requested', $data ?? [], null);
        $this->setIfExists('reference_1', $data ?? [], null);
        $this->setIfExists('reference_2', $data ?? [], null);
        $this->setIfExists('request_retail_rates', $data ?? [], null);
        $this->setIfExists('return_service_type', $data ?? [], null);
        $this->setIfExists('rma_number', $data ?? [], null);
        $this->setIfExists('saturday_delivery', $data ?? [], null);
        $this->setIfExists('salesperson_number', $data ?? [], null);
        $this->setIfExists('serial_number', $data ?? [], null);
        $this->setIfExists('signature_confirmation', $data ?? [], null);
        $this->setIfExists('store_number', $data ?? [], null);
        $this->setIfExists('transaction_reference_number', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getAncillaryEndorsementAllowableValues();
        if (!is_null($this->container['ancillary_endorsement']) && !in_array($this->container['ancillary_endorsement'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'ancillary_endorsement', must be one of '%s'",
                $this->container['ancillary_endorsement'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getDangerousGoodsCodeAllowableValues();
        if (!is_null($this->container['dangerous_goods_code']) && !in_array($this->container['dangerous_goods_code'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'dangerous_goods_code', must be one of '%s'",
                $this->container['dangerous_goods_code'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getPreferredDeliveryTimeframeAllowableValues();
        if (!is_null($this->container['preferred_delivery_timeframe']) && !in_array($this->container['preferred_delivery_timeframe'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'preferred_delivery_timeframe', must be one of '%s'",
                $this->container['preferred_delivery_timeframe'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getSignatureConfirmationAllowableValues();
        if (!is_null($this->container['signature_confirmation']) && !in_array($this->container['signature_confirmation'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'signature_confirmation', must be one of '%s'",
                $this->container['signature_confirmation'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accounts_receivable_customer_account
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getAccountsReceivableCustomerAccount()
    {
        return $this->container['accounts_receivable_customer_account'];
    }

    /**
     * Sets accounts_receivable_customer_account
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $accounts_receivable_customer_account UPS only. Adds custom accounts receivable customer account reference to UPS labels.
     *
     * @return self
     */
    public function setAccountsReceivableCustomerAccount($accounts_receivable_customer_account)
    {
        if (is_null($accounts_receivable_customer_account)) {
            throw new \InvalidArgumentException('non-nullable accounts_receivable_customer_account cannot be null');
        }
        $this->container['accounts_receivable_customer_account'] = $accounts_receivable_customer_account;

        return $this;
    }

    /**
     * Gets alcohol
     *
     * @return \OpenAPI\Client\Model\Alcohol|null
     */
    public function getAlcohol()
    {
        return $this->container['alcohol'];
    }

    /**
     * Sets alcohol
     *
     * @param \OpenAPI\Client\Model\Alcohol|null $alcohol alcohol
     *
     * @return self
     */
    public function setAlcohol($alcohol)
    {
        if (is_null($alcohol)) {
            throw new \InvalidArgumentException('non-nullable alcohol cannot be null');
        }
        $this->container['alcohol'] = $alcohol;

        return $this;
    }

    /**
     * Gets ancillary_endorsement
     *
     * @return string|null
     */
    public function getAncillaryEndorsement()
    {
        return $this->container['ancillary_endorsement'];
    }

    /**
     * Sets ancillary_endorsement
     *
     * @param string|null $ancillary_endorsement Specify an ancillary service endorsement to provide the USPS with instructions on how to handle undeliverable-as-addressed pieces (DHL eCommerce only).
     *
     * @return self
     */
    public function setAncillaryEndorsement($ancillary_endorsement)
    {
        if (is_null($ancillary_endorsement)) {
            throw new \InvalidArgumentException('non-nullable ancillary_endorsement cannot be null');
        }
        $allowedValues = $this->getAncillaryEndorsementAllowableValues();
        if (!in_array($ancillary_endorsement, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'ancillary_endorsement', must be one of '%s'",
                    $ancillary_endorsement,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['ancillary_endorsement'] = $ancillary_endorsement;

        return $this;
    }

    /**
     * Gets appropriation_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getAppropriationNumber()
    {
        return $this->container['appropriation_number'];
    }

    /**
     * Sets appropriation_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $appropriation_number UPS only. Adds custom appropriation number reference to UPS labels.
     *
     * @return self
     */
    public function setAppropriationNumber($appropriation_number)
    {
        if (is_null($appropriation_number)) {
            throw new \InvalidArgumentException('non-nullable appropriation_number cannot be null');
        }
        $this->container['appropriation_number'] = $appropriation_number;

        return $this;
    }

    /**
     * Gets authority_to_leave
     *
     * @return bool|null
     */
    public function getAuthorityToLeave()
    {
        return $this->container['authority_to_leave'];
    }

    /**
     * Sets authority_to_leave
     *
     * @param bool|null $authority_to_leave Request `true` to give carrier permission to leave the parcel in a safe place if no one answers the  door (where supported). When set to `false`, if no one is available to receive the item, the parcel  will not be left (*surcharges may be applicable).
     *
     * @return self
     */
    public function setAuthorityToLeave($authority_to_leave)
    {
        if (is_null($authority_to_leave)) {
            throw new \InvalidArgumentException('non-nullable authority_to_leave cannot be null');
        }
        $this->container['authority_to_leave'] = $authority_to_leave;

        return $this;
    }

    /**
     * Gets bill_of_lading_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getBillOfLadingNumber()
    {
        return $this->container['bill_of_lading_number'];
    }

    /**
     * Sets bill_of_lading_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $bill_of_lading_number UPS only. Adds custom bill of lading number reference to UPS labels.
     *
     * @return self
     */
    public function setBillOfLadingNumber($bill_of_lading_number)
    {
        if (is_null($bill_of_lading_number)) {
            throw new \InvalidArgumentException('non-nullable bill_of_lading_number cannot be null');
        }
        $this->container['bill_of_lading_number'] = $bill_of_lading_number;

        return $this;
    }

    /**
     * Gets billing
     *
     * @return \OpenAPI\Client\Model\Billing|null
     */
    public function getBilling()
    {
        return $this->container['billing'];
    }

    /**
     * Sets billing
     *
     * @param \OpenAPI\Client\Model\Billing|null $billing billing
     *
     * @return self
     */
    public function setBilling($billing)
    {
        if (is_null($billing)) {
            throw new \InvalidArgumentException('non-nullable billing cannot be null');
        }
        $this->container['billing'] = $billing;

        return $this;
    }

    /**
     * Gets bypass_address_validation
     *
     * @return bool|null
     */
    public function getBypassAddressValidation()
    {
        return $this->container['bypass_address_validation'];
    }

    /**
     * Sets bypass_address_validation
     *
     * @param bool|null $bypass_address_validation Bypasses address validation (USPS, UPS, & LaserShip only).
     *
     * @return self
     */
    public function setBypassAddressValidation($bypass_address_validation)
    {
        if (is_null($bypass_address_validation)) {
            throw new \InvalidArgumentException('non-nullable bypass_address_validation cannot be null');
        }
        $this->container['bypass_address_validation'] = $bypass_address_validation;

        return $this;
    }

    /**
     * Gets carbon_neutral
     *
     * @return bool|null
     */
    public function getCarbonNeutral()
    {
        return $this->container['carbon_neutral'];
    }

    /**
     * Sets carbon_neutral
     *
     * @param bool|null $carbon_neutral Request carbon offsets by passing true (UPS only).
     *
     * @return self
     */
    public function setCarbonNeutral($carbon_neutral)
    {
        if (is_null($carbon_neutral)) {
            throw new \InvalidArgumentException('non-nullable carbon_neutral cannot be null');
        }
        $this->container['carbon_neutral'] = $carbon_neutral;

        return $this;
    }

    /**
     * Gets carrier_hub_id
     *
     * @return string|null
     */
    public function getCarrierHubId()
    {
        return $this->container['carrier_hub_id'];
    }

    /**
     * Sets carrier_hub_id
     *
     * @param string|null $carrier_hub_id Identifies the carrier injection site.
     *
     * @return self
     */
    public function setCarrierHubId($carrier_hub_id)
    {
        if (is_null($carrier_hub_id)) {
            throw new \InvalidArgumentException('non-nullable carrier_hub_id cannot be null');
        }
        $this->container['carrier_hub_id'] = $carrier_hub_id;

        return $this;
    }

    /**
     * Gets carrier_hub_travel_time
     *
     * @return int|null
     */
    public function getCarrierHubTravelTime()
    {
        return $this->container['carrier_hub_travel_time'];
    }

    /**
     * Sets carrier_hub_travel_time
     *
     * @param int|null $carrier_hub_travel_time Travel time in hours from fulfillment center to carrier injection site.
     *
     * @return self
     */
    public function setCarrierHubTravelTime($carrier_hub_travel_time)
    {
        if (is_null($carrier_hub_travel_time)) {
            throw new \InvalidArgumentException('non-nullable carrier_hub_travel_time cannot be null');
        }
        $this->container['carrier_hub_travel_time'] = $carrier_hub_travel_time;

        return $this;
    }

    /**
     * Gets cod
     *
     * @return \OpenAPI\Client\Model\COD|null
     */
    public function getCod()
    {
        return $this->container['cod'];
    }

    /**
     * Sets cod
     *
     * @param \OpenAPI\Client\Model\COD|null $cod cod
     *
     * @return self
     */
    public function setCod($cod)
    {
        if (is_null($cod)) {
            throw new \InvalidArgumentException('non-nullable cod cannot be null');
        }
        $this->container['cod'] = $cod;

        return $this;
    }

    /**
     * Gets cod_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getCodNumber()
    {
        return $this->container['cod_number'];
    }

    /**
     * Sets cod_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $cod_number UPS only. Adds custom COD number reference to UPS labels.
     *
     * @return self
     */
    public function setCodNumber($cod_number)
    {
        if (is_null($cod_number)) {
            throw new \InvalidArgumentException('non-nullable cod_number cannot be null');
        }
        $this->container['cod_number'] = $cod_number;

        return $this;
    }

    /**
     * Gets container_type
     *
     * @return string|null
     */
    public function getContainerType()
    {
        return $this->container['container_type'];
    }

    /**
     * Sets container_type
     *
     * @param string|null $container_type Specify container type.
     *
     * @return self
     */
    public function setContainerType($container_type)
    {
        if (is_null($container_type)) {
            throw new \InvalidArgumentException('non-nullable container_type cannot be null');
        }
        $this->container['container_type'] = $container_type;

        return $this;
    }

    /**
     * Gets critical_pull_time
     *
     * @return string|null
     */
    public function getCriticalPullTime()
    {
        return $this->container['critical_pull_time'];
    }

    /**
     * Sets critical_pull_time
     *
     * @param string|null $critical_pull_time Carrier arrival time to pickup packages from the fulfillment center.  UTC format: `%Y-%m-%dT%H:%M:%SZ`
     *
     * @return self
     */
    public function setCriticalPullTime($critical_pull_time)
    {
        if (is_null($critical_pull_time)) {
            throw new \InvalidArgumentException('non-nullable critical_pull_time cannot be null');
        }
        $this->container['critical_pull_time'] = $critical_pull_time;

        return $this;
    }

    /**
     * Gets customer_branch
     *
     * @return string|null
     */
    public function getCustomerBranch()
    {
        return $this->container['customer_branch'];
    }

    /**
     * Sets customer_branch
     *
     * @param string|null $customer_branch Specify customer branch (Lasership only).
     *
     * @return self
     */
    public function setCustomerBranch($customer_branch)
    {
        if (is_null($customer_branch)) {
            throw new \InvalidArgumentException('non-nullable customer_branch cannot be null');
        }
        $this->container['customer_branch'] = $customer_branch;

        return $this;
    }

    /**
     * Gets customer_reference
     *
     * @return \OpenAPI\Client\Model\CustomerReference|null
     */
    public function getCustomerReference()
    {
        return $this->container['customer_reference'];
    }

    /**
     * Sets customer_reference
     *
     * @param \OpenAPI\Client\Model\CustomerReference|null $customer_reference customer_reference
     *
     * @return self
     */
    public function setCustomerReference($customer_reference)
    {
        if (is_null($customer_reference)) {
            throw new \InvalidArgumentException('non-nullable customer_reference cannot be null');
        }
        $this->container['customer_reference'] = $customer_reference;

        return $this;
    }

    /**
     * Gets dangerous_goods
     *
     * @return \OpenAPI\Client\Model\DangerousGoodsObject|null
     */
    public function getDangerousGoods()
    {
        return $this->container['dangerous_goods'];
    }

    /**
     * Sets dangerous_goods
     *
     * @param \OpenAPI\Client\Model\DangerousGoodsObject|null $dangerous_goods dangerous_goods
     *
     * @return self
     */
    public function setDangerousGoods($dangerous_goods)
    {
        if (is_null($dangerous_goods)) {
            throw new \InvalidArgumentException('non-nullable dangerous_goods cannot be null');
        }
        $this->container['dangerous_goods'] = $dangerous_goods;

        return $this;
    }

    /**
     * Gets dangerous_goods_code
     *
     * @return string|null
     */
    public function getDangerousGoodsCode()
    {
        return $this->container['dangerous_goods_code'];
    }

    /**
     * Sets dangerous_goods_code
     *
     * @param string|null $dangerous_goods_code Dangerous Goods Code (DHL eCommerce only). See <a href=\"https://api-legacy.dhlecs.com/docs/v2/appendix.html#dangerous-goods\">Category Codes</a>
     *
     * @return self
     */
    public function setDangerousGoodsCode($dangerous_goods_code)
    {
        if (is_null($dangerous_goods_code)) {
            throw new \InvalidArgumentException('non-nullable dangerous_goods_code cannot be null');
        }
        $allowedValues = $this->getDangerousGoodsCodeAllowableValues();
        if (!in_array($dangerous_goods_code, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'dangerous_goods_code', must be one of '%s'",
                    $dangerous_goods_code,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['dangerous_goods_code'] = $dangerous_goods_code;

        return $this;
    }

    /**
     * Gets dealer_order_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getDealerOrderNumber()
    {
        return $this->container['dealer_order_number'];
    }

    /**
     * Sets dealer_order_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $dealer_order_number UPS only. Adds custom dealer order number reference to UPS labels.
     *
     * @return self
     */
    public function setDealerOrderNumber($dealer_order_number)
    {
        if (is_null($dealer_order_number)) {
            throw new \InvalidArgumentException('non-nullable dealer_order_number cannot be null');
        }
        $this->container['dealer_order_number'] = $dealer_order_number;

        return $this;
    }

    /**
     * Gets delivery_instructions
     *
     * @return string|null
     */
    public function getDeliveryInstructions()
    {
        return $this->container['delivery_instructions'];
    }

    /**
     * Sets delivery_instructions
     *
     * @param string|null $delivery_instructions Specify delivery instructions. Up to 500 characters. (FedEx and OnTrac only).
     *
     * @return self
     */
    public function setDeliveryInstructions($delivery_instructions)
    {
        if (is_null($delivery_instructions)) {
            throw new \InvalidArgumentException('non-nullable delivery_instructions cannot be null');
        }
        $this->container['delivery_instructions'] = $delivery_instructions;

        return $this;
    }

    /**
     * Gets dept_number
     *
     * @return \OpenAPI\Client\Model\DepartmentNumber|null
     */
    public function getDeptNumber()
    {
        return $this->container['dept_number'];
    }

    /**
     * Sets dept_number
     *
     * @param \OpenAPI\Client\Model\DepartmentNumber|null $dept_number dept_number
     *
     * @return self
     */
    public function setDeptNumber($dept_number)
    {
        if (is_null($dept_number)) {
            throw new \InvalidArgumentException('non-nullable dept_number cannot be null');
        }
        $this->container['dept_number'] = $dept_number;

        return $this;
    }

    /**
     * Gets dry_ice
     *
     * @return \OpenAPI\Client\Model\DryIce|null
     */
    public function getDryIce()
    {
        return $this->container['dry_ice'];
    }

    /**
     * Sets dry_ice
     *
     * @param \OpenAPI\Client\Model\DryIce|null $dry_ice dry_ice
     *
     * @return self
     */
    public function setDryIce($dry_ice)
    {
        if (is_null($dry_ice)) {
            throw new \InvalidArgumentException('non-nullable dry_ice cannot be null');
        }
        $this->container['dry_ice'] = $dry_ice;

        return $this;
    }

    /**
     * Gets fda_product_code
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getFdaProductCode()
    {
        return $this->container['fda_product_code'];
    }

    /**
     * Sets fda_product_code
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $fda_product_code UPS only. Adds custom FDA product code reference to UPS labels.
     *
     * @return self
     */
    public function setFdaProductCode($fda_product_code)
    {
        if (is_null($fda_product_code)) {
            throw new \InvalidArgumentException('non-nullable fda_product_code cannot be null');
        }
        $this->container['fda_product_code'] = $fda_product_code;

        return $this;
    }

    /**
     * Gets fulfillment_center
     *
     * @return string|null
     */
    public function getFulfillmentCenter()
    {
        return $this->container['fulfillment_center'];
    }

    /**
     * Sets fulfillment_center
     *
     * @param string|null $fulfillment_center The fulfilment center where the package originates from.
     *
     * @return self
     */
    public function setFulfillmentCenter($fulfillment_center)
    {
        if (is_null($fulfillment_center)) {
            throw new \InvalidArgumentException('non-nullable fulfillment_center cannot be null');
        }
        $this->container['fulfillment_center'] = $fulfillment_center;

        return $this;
    }

    /**
     * Gets insurance
     *
     * @return \OpenAPI\Client\Model\Insurance|null
     */
    public function getInsurance()
    {
        return $this->container['insurance'];
    }

    /**
     * Sets insurance
     *
     * @param \OpenAPI\Client\Model\Insurance|null $insurance insurance
     *
     * @return self
     */
    public function setInsurance($insurance)
    {
        if (is_null($insurance)) {
            throw new \InvalidArgumentException('non-nullable insurance cannot be null');
        }
        $this->container['insurance'] = $insurance;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return \OpenAPI\Client\Model\InvoiceNumber|null
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param \OpenAPI\Client\Model\InvoiceNumber|null $invoice_number invoice_number
     *
     * @return self
     */
    public function setInvoiceNumber($invoice_number)
    {
        if (is_null($invoice_number)) {
            throw new \InvalidArgumentException('non-nullable invoice_number cannot be null');
        }
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets is_return
     *
     * @return bool|null
     */
    public function getIsReturn()
    {
        return $this->container['is_return'];
    }

    /**
     * Sets is_return
     *
     * @param bool|null $is_return This field specifies if it is a scan-based return shipment. See the <a href=\"https://docs.goshippo.com/docs/shipments/returns/\">Create a return shipment</a> section for more details.
     *
     * @return self
     */
    public function setIsReturn($is_return)
    {
        if (is_null($is_return)) {
            throw new \InvalidArgumentException('non-nullable is_return cannot be null');
        }
        $this->container['is_return'] = $is_return;

        return $this;
    }

    /**
     * Gets lasership_attrs
     *
     * @return \OpenAPI\Client\Model\ShipmentExtraLasershipAttributesEnum[]|null
     */
    public function getLasershipAttrs()
    {
        return $this->container['lasership_attrs'];
    }

    /**
     * Sets lasership_attrs
     *
     * @param \OpenAPI\Client\Model\ShipmentExtraLasershipAttributesEnum[]|null $lasership_attrs Specify Lasership Attributes (Lasership only). Multiple options accepted.
     *
     * @return self
     */
    public function setLasershipAttrs($lasership_attrs)
    {
        if (is_null($lasership_attrs)) {
            throw new \InvalidArgumentException('non-nullable lasership_attrs cannot be null');
        }
        $this->container['lasership_attrs'] = $lasership_attrs;

        return $this;
    }

    /**
     * Gets lasership_declared_value
     *
     * @return string|null
     */
    public function getLasershipDeclaredValue()
    {
        return $this->container['lasership_declared_value'];
    }

    /**
     * Sets lasership_declared_value
     *
     * @param string|null $lasership_declared_value Declared value (Lasership only). Defaults to `50.00`.
     *
     * @return self
     */
    public function setLasershipDeclaredValue($lasership_declared_value)
    {
        if (is_null($lasership_declared_value)) {
            throw new \InvalidArgumentException('non-nullable lasership_declared_value cannot be null');
        }
        $this->container['lasership_declared_value'] = $lasership_declared_value;

        return $this;
    }

    /**
     * Gets manifest_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getManifestNumber()
    {
        return $this->container['manifest_number'];
    }

    /**
     * Sets manifest_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $manifest_number UPS only. Adds custom manifest number reference to UPS labels.
     *
     * @return self
     */
    public function setManifestNumber($manifest_number)
    {
        if (is_null($manifest_number)) {
            throw new \InvalidArgumentException('non-nullable manifest_number cannot be null');
        }
        $this->container['manifest_number'] = $manifest_number;

        return $this;
    }

    /**
     * Gets model_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getModelNumber()
    {
        return $this->container['model_number'];
    }

    /**
     * Sets model_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $model_number UPS only. Adds custom model number reference to UPS labels.
     *
     * @return self
     */
    public function setModelNumber($model_number)
    {
        if (is_null($model_number)) {
            throw new \InvalidArgumentException('non-nullable model_number cannot be null');
        }
        $this->container['model_number'] = $model_number;

        return $this;
    }

    /**
     * Gets part_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getPartNumber()
    {
        return $this->container['part_number'];
    }

    /**
     * Sets part_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $part_number UPS only. Adds custom part number reference to UPS labels.
     *
     * @return self
     */
    public function setPartNumber($part_number)
    {
        if (is_null($part_number)) {
            throw new \InvalidArgumentException('non-nullable part_number cannot be null');
        }
        $this->container['part_number'] = $part_number;

        return $this;
    }

    /**
     * Gets po_number
     *
     * @return \OpenAPI\Client\Model\PoNumber|null
     */
    public function getPoNumber()
    {
        return $this->container['po_number'];
    }

    /**
     * Sets po_number
     *
     * @param \OpenAPI\Client\Model\PoNumber|null $po_number po_number
     *
     * @return self
     */
    public function setPoNumber($po_number)
    {
        if (is_null($po_number)) {
            throw new \InvalidArgumentException('non-nullable po_number cannot be null');
        }
        $this->container['po_number'] = $po_number;

        return $this;
    }

    /**
     * Gets preferred_delivery_timeframe
     *
     * @return string|null
     */
    public function getPreferredDeliveryTimeframe()
    {
        return $this->container['preferred_delivery_timeframe'];
    }

    /**
     * Sets preferred_delivery_timeframe
     *
     * @param string|null $preferred_delivery_timeframe Required for DHL Germany Paket Sameday. Designates a desired timeframe for delivery. Format is `HHMMHHMM`
     *
     * @return self
     */
    public function setPreferredDeliveryTimeframe($preferred_delivery_timeframe)
    {
        if (is_null($preferred_delivery_timeframe)) {
            throw new \InvalidArgumentException('non-nullable preferred_delivery_timeframe cannot be null');
        }
        $allowedValues = $this->getPreferredDeliveryTimeframeAllowableValues();
        if (!in_array($preferred_delivery_timeframe, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'preferred_delivery_timeframe', must be one of '%s'",
                    $preferred_delivery_timeframe,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['preferred_delivery_timeframe'] = $preferred_delivery_timeframe;

        return $this;
    }

    /**
     * Gets premium
     *
     * @return bool|null
     */
    public function getPremium()
    {
        return $this->container['premium'];
    }

    /**
     * Sets premium
     *
     * @param bool|null $premium Add premium service to a shipment (DHL Germany international shipments only).
     *
     * @return self
     */
    public function setPremium($premium)
    {
        if (is_null($premium)) {
            throw new \InvalidArgumentException('non-nullable premium cannot be null');
        }
        $this->container['premium'] = $premium;

        return $this;
    }

    /**
     * Gets production_code
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getProductionCode()
    {
        return $this->container['production_code'];
    }

    /**
     * Sets production_code
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $production_code UPS only. Adds custom product code reference to UPS labels.
     *
     * @return self
     */
    public function setProductionCode($production_code)
    {
        if (is_null($production_code)) {
            throw new \InvalidArgumentException('non-nullable production_code cannot be null');
        }
        $this->container['production_code'] = $production_code;

        return $this;
    }

    /**
     * Gets purchase_request_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getPurchaseRequestNumber()
    {
        return $this->container['purchase_request_number'];
    }

    /**
     * Sets purchase_request_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $purchase_request_number UPS only. Adds custom purchase request number reference to UPS labels.
     *
     * @return self
     */
    public function setPurchaseRequestNumber($purchase_request_number)
    {
        if (is_null($purchase_request_number)) {
            throw new \InvalidArgumentException('non-nullable purchase_request_number cannot be null');
        }
        $this->container['purchase_request_number'] = $purchase_request_number;

        return $this;
    }

    /**
     * Gets qr_code_requested
     *
     * @return bool|null
     */
    public function getQrCodeRequested()
    {
        return $this->container['qr_code_requested'];
    }

    /**
     * Sets qr_code_requested
     *
     * @param bool|null $qr_code_requested Request a QR code for a given transaction when creating a shipping label (USPS domestic and Evri UK only).
     *
     * @return self
     */
    public function setQrCodeRequested($qr_code_requested)
    {
        if (is_null($qr_code_requested)) {
            throw new \InvalidArgumentException('non-nullable qr_code_requested cannot be null');
        }
        $this->container['qr_code_requested'] = $qr_code_requested;

        return $this;
    }

    /**
     * Gets reference_1
     *
     * @return string|null
     */
    public function getReference1()
    {
        return $this->container['reference_1'];
    }

    /**
     * Sets reference_1
     *
     * @param string|null $reference_1 Optional text to be printed on the shipping label if supported by carrier. Up to 50 characters.
     *
     * @return self
     */
    public function setReference1($reference_1)
    {
        if (is_null($reference_1)) {
            throw new \InvalidArgumentException('non-nullable reference_1 cannot be null');
        }
        $this->container['reference_1'] = $reference_1;

        return $this;
    }

    /**
     * Gets reference_2
     *
     * @return string|null
     */
    public function getReference2()
    {
        return $this->container['reference_2'];
    }

    /**
     * Sets reference_2
     *
     * @param string|null $reference_2 Optional text to be printed on the shipping label if supported by carrier. Up to 50 characters. For DHL eCommerce, this field can be used for billing reference.
     *
     * @return self
     */
    public function setReference2($reference_2)
    {
        if (is_null($reference_2)) {
            throw new \InvalidArgumentException('non-nullable reference_2 cannot be null');
        }
        $this->container['reference_2'] = $reference_2;

        return $this;
    }

    /**
     * Gets request_retail_rates
     *
     * @return bool|null
     */
    public function getRequestRetailRates()
    {
        return $this->container['request_retail_rates'];
    }

    /**
     * Sets request_retail_rates
     *
     * @param bool|null $request_retail_rates Returns retail rates instead of account-based rates (UPS and FedEx only).
     *
     * @return self
     */
    public function setRequestRetailRates($request_retail_rates)
    {
        if (is_null($request_retail_rates)) {
            throw new \InvalidArgumentException('non-nullable request_retail_rates cannot be null');
        }
        $this->container['request_retail_rates'] = $request_retail_rates;

        return $this;
    }

    /**
     * Gets return_service_type
     *
     * @return string|null
     */
    public function getReturnServiceType()
    {
        return $this->container['return_service_type'];
    }

    /**
     * Sets return_service_type
     *
     * @param string|null $return_service_type Request additional return option for return shipments (UPS and Lasership only).
     *
     * @return self
     */
    public function setReturnServiceType($return_service_type)
    {
        if (is_null($return_service_type)) {
            throw new \InvalidArgumentException('non-nullable return_service_type cannot be null');
        }
        $this->container['return_service_type'] = $return_service_type;

        return $this;
    }

    /**
     * Gets rma_number
     *
     * @return \OpenAPI\Client\Model\RmaNumber|null
     */
    public function getRmaNumber()
    {
        return $this->container['rma_number'];
    }

    /**
     * Sets rma_number
     *
     * @param \OpenAPI\Client\Model\RmaNumber|null $rma_number rma_number
     *
     * @return self
     */
    public function setRmaNumber($rma_number)
    {
        if (is_null($rma_number)) {
            throw new \InvalidArgumentException('non-nullable rma_number cannot be null');
        }
        $this->container['rma_number'] = $rma_number;

        return $this;
    }

    /**
     * Gets saturday_delivery
     *
     * @return bool|null
     */
    public function getSaturdayDelivery()
    {
        return $this->container['saturday_delivery'];
    }

    /**
     * Sets saturday_delivery
     *
     * @param bool|null $saturday_delivery Marks shipment as to be delivered on a Saturday.
     *
     * @return self
     */
    public function setSaturdayDelivery($saturday_delivery)
    {
        if (is_null($saturday_delivery)) {
            throw new \InvalidArgumentException('non-nullable saturday_delivery cannot be null');
        }
        $this->container['saturday_delivery'] = $saturday_delivery;

        return $this;
    }

    /**
     * Gets salesperson_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getSalespersonNumber()
    {
        return $this->container['salesperson_number'];
    }

    /**
     * Sets salesperson_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $salesperson_number UPS only. Adds custom salesperson number reference to UPS labels.
     *
     * @return self
     */
    public function setSalespersonNumber($salesperson_number)
    {
        if (is_null($salesperson_number)) {
            throw new \InvalidArgumentException('non-nullable salesperson_number cannot be null');
        }
        $this->container['salesperson_number'] = $salesperson_number;

        return $this;
    }

    /**
     * Gets serial_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getSerialNumber()
    {
        return $this->container['serial_number'];
    }

    /**
     * Sets serial_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $serial_number UPS only. Adds custom serial number reference to UPS labels.
     *
     * @return self
     */
    public function setSerialNumber($serial_number)
    {
        if (is_null($serial_number)) {
            throw new \InvalidArgumentException('non-nullable serial_number cannot be null');
        }
        $this->container['serial_number'] = $serial_number;

        return $this;
    }

    /**
     * Gets signature_confirmation
     *
     * @return string|null
     */
    public function getSignatureConfirmation()
    {
        return $this->container['signature_confirmation'];
    }

    /**
     * Sets signature_confirmation
     *
     * @param string|null $signature_confirmation Request standard or adult signature confirmation. You can alternatively request Certified Mail (USPS only)  or Indirect signature (FedEx only) or Carrier Confirmation (Deutsche Post only).
     *
     * @return self
     */
    public function setSignatureConfirmation($signature_confirmation)
    {
        if (is_null($signature_confirmation)) {
            throw new \InvalidArgumentException('non-nullable signature_confirmation cannot be null');
        }
        $allowedValues = $this->getSignatureConfirmationAllowableValues();
        if (!in_array($signature_confirmation, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'signature_confirmation', must be one of '%s'",
                    $signature_confirmation,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['signature_confirmation'] = $signature_confirmation;

        return $this;
    }

    /**
     * Gets store_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getStoreNumber()
    {
        return $this->container['store_number'];
    }

    /**
     * Sets store_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $store_number UPS only. Adds custom store number reference to UPS labels.
     *
     * @return self
     */
    public function setStoreNumber($store_number)
    {
        if (is_null($store_number)) {
            throw new \InvalidArgumentException('non-nullable store_number cannot be null');
        }
        $this->container['store_number'] = $store_number;

        return $this;
    }

    /**
     * Gets transaction_reference_number
     *
     * @return \OpenAPI\Client\Model\UPSReferenceFields|null
     */
    public function getTransactionReferenceNumber()
    {
        return $this->container['transaction_reference_number'];
    }

    /**
     * Sets transaction_reference_number
     *
     * @param \OpenAPI\Client\Model\UPSReferenceFields|null $transaction_reference_number UPS only. Adds custom transaction reference number to UPS labels.
     *
     * @return self
     */
    public function setTransactionReferenceNumber($transaction_reference_number)
    {
        if (is_null($transaction_reference_number)) {
            throw new \InvalidArgumentException('non-nullable transaction_reference_number cannot be null');
        }
        $this->container['transaction_reference_number'] = $transaction_reference_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


