<?php
/**
 * ServiceGroupTypeEnumTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shippo external API.
 *
 * Use this API to integrate with the Shippo service
 *
 * The version of the OpenAPI document: 2018-02-08
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ServiceGroupTypeEnumTest Class Doc Comment
 *
 * @category    Class
 * @description The type of the service group.&lt;br&gt;  &#x60;LIVE_RATE&#x60; - Shippo will make a rating request and return real-time rates for the shipping group, only falling back to the specified flat rate amount if no rates match a service level in the service group.&lt;br&gt;  &#x60;FLAT_RATE&#x60; - Returns a shipping option with the specified flat rate amount.&lt;br&gt;  &#x60;FREE_SHIPPING&#x60; - Returns a shipping option with a price of $0 only if the total cost of items exceeds the amount defined by &#x60;free_shipping_threshold_min&#x60;
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ServiceGroupTypeEnumTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ServiceGroupTypeEnum"
     */
    public function testServiceGroupTypeEnum()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
